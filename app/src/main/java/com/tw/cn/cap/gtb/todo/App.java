/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.tw.cn.cap.gtb.todo;

import java.util.ArrayList;
import java.util.List;

public class App {

    private final TaskRepository taskRepository = new TaskRepository();

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
    }

    public List<String> run() {
        //API的知识
        //readTasklines第一层抽象的下一层，因为是为了支撑第一层而做的
        //loadTasks抽象出来
        final List<Task> tasks = taskRepository.loadTasks();
        final List<String> result = new ArrayList<>();
        //方便扩充
        //try主要解决readAlllines的问题
        //result.addAll(lines);
        //这里不再关注task以下层面的细节
        /*
        for(Task task:tasks){
            result.add(task.format());
        }
         */
        //replace with forEach: 选中task alt+enter
        /* 一块一块且相似，所以重构
        tasks.stream()
                .filter(task->!task.isCompleted())
                .map(Task::format)
                .forEach(result::add);
        result.add("# Completed");
        tasks.stream()
                .filter(task -> task.isCompleted())
                .map(Task::format)
                .forEach(result::add);
`       */
        formatSection(tasks, result, "# To be done", false);

        formatSection(tasks, result, "# Completed", true);
        return result;
    }

    private void formatSection(List<Task> tasks, List<String> result, String title, boolean flag) {
        result.add(title);
        tasks.stream()
                .filter(task-> flag ==task.isCompleted())
                .map(Task::format)
                .forEach(result::add);
    }

}
